<template>
	<view class="p-base pb-0">
		<view class="flex uni-row input-wrapper p-base">
			<view class="flex-1">
			  <input class="uni-input" placeholder="输入课程名称" v-model="state.query.courseName" type="text"/>
			</view>
			<icon type="search" class=""></icon>
		</view>
	</view>
	<scroll-view 
		@scrolltolower="scrolltolower"
		style="flex:1"
	>
		<view class="p-base pt-0">
			<courseCard
				v-for="item in state.courseList"
				:cardInfo="item"
				:key="item._id"
				:url="`/pages/course/detail/index?id=${item._id}`"
			></courseCard>
		</view>
	</scroll-view>
	<!-- #ifdef APP -->
	<!-- #endif -->
</template>

<script setup lang="uts">
	import {onMounted} from 'vue'
	import courseCard from '@/pages/components/course-card/index.uvue'
	import {getCourses} from '@/pages/request/course'
	import {CourseType} from '@/pages/types/course'
	const state = reactive({
		query: {
			courseName: ''
		} as UTSJSONObject & {
			courseName: ''
		},
		courseList: [] as Array<CourseType>,
		page: 0,
		pageSize: 10,
		total: 0,
		loading: false
	})
	const loadData = () => {
		if(state.page > (state.total / state.pageSize)) {
			return
		}
		state.loading = true
		state.page += 1
		getCourses({
			page: state.page,
			pageSize: state.pageSize,
			query: state.query
		}).then((res: {
			courseList: Array<CourseType>,
			total: number
		}) => {
			state.courseList.push(...res.courseList)
			state.total = res.total
		}).finally(() => {
			state.loading = false
		})
	}
	const scrolltolower = () => {
		loadData()
	}
	onMounted(() => {
		loadData()
	})
</script>

<style>
		
</style>
